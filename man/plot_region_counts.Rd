% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_region_counts.R
\name{plot_region_counts}
\alias{plot_region_counts}
\title{Plot Regional Physician Counts by Specified Grouping}
\usage{
plot_region_counts(state_counts, region_df, region_col, save_path = NULL)
}
\arguments{
\item{state_counts}{A dataframe containing state-level physician counts. Must have columns \code{state_code} and \code{total_available}.}

\item{region_df}{A dataframe with columns \code{State} and a region grouping column. Each row maps a state to its region.}

\item{region_col}{A string specifying the name of the column in \code{region_df} used to group the states by region.}

\item{save_path}{An optional string specifying the file path to save the generated plot. If \code{NULL}, the plot displays onscreen only.}
}
\value{
A ggplot object representing the choropleth map.
}
\description{
This function creates a choropleth map of physician counts by region, with options for different regional groupings.
It merges state counts with regional data, calculates centroids for text labels, and generates a plot using ggplot2.
Extensive logging is provided to the console for each major step, including data transformations, plot generation, and file saving.
}
\examples{
# Example 1: Plot region counts for ENT_BOG regions, saving output to a file
ent_bog_regions <- data.frame(
  State = c("Alabama", "Alaska", "Arizona"),
  ENT_BOG_Region = c("Region 4", "Region 9", "Region 9")
)
state_counts <- data.frame(
  state_code = c("alabama", "alaska", "arizona"),
  total_available = c(10, 15, 8)
)
plot_region_counts(
  state_counts = state_counts,
  region_df = ent_bog_regions,
  region_col = "ENT_BOG_Region",
  save_path = "ent_bog_region_map.png"
)

# Example 2: Plot without saving, grouping by ACOG districts
acog_districts_df <- data.frame(
  State = c("California", "Nevada", "Utah"),
  ACOG_District = c("District IX", "District IX", "District VIII")
)
state_counts <- data.frame(
  state_code = c("california", "nevada", "utah"),
  total_available = c(20, 12, 5)
)
plot_region_counts(
  state_counts = state_counts,
  region_df = acog_districts_df,
  region_col = "ACOG_District"
)

# Example 3: Grouping by custom region data, saving output to file
custom_regions <- data.frame(
  State = c("Texas", "New York", "Florida"),
  Custom_Region = c("South", "Northeast", "South")
)
state_counts <- data.frame(
  state_code = c("texas", "new york", "florida"),
  total_available = c(25, 17, 13)
)
plot_region_counts(
  state_counts = state_counts,
  region_df = custom_regions,
  region_col = "Custom_Region",
  save_path = "custom_region_map.png"
)

}
