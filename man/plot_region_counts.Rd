% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_region_counts.R
\name{plot_region_counts}
\alias{plot_region_counts}
\title{Plot Regional Physician Counts by Specified Grouping}
\usage{
plot_region_counts(state_counts, region_df, region_col, save_path = NULL)
}
\arguments{
\item{state_counts}{A dataframe containing state-level physician counts. Must have columns \code{state_code} (lowercase state names) and \code{total_available} (numerical counts).}

\item{region_df}{A dataframe mapping states to regions. Must include \code{State} (state names in lowercase) and a column for the region grouping.}

\item{region_col}{A string specifying the column in \code{region_df} to use for grouping states into regions (e.g., "Region").}

\item{save_path}{Optional. A string specifying the file path to save the plot as an image. If \code{NULL} (default), the plot is displayed onscreen but not saved.}
}
\value{
A ggplot object representing the choropleth map.
}
\description{
This function creates a choropleth map visualizing physician counts by region, with options for grouping states into custom regions. It handles merging state counts with regional data, calculating centroids for text labels, and generating plots using ggplot2. Logging is included to provide insights into the execution flow and data transformations.
}
\details{
The function merges \code{state_counts} and \code{region_df} by state name, aggregates physician counts by region, and maps these counts onto a choropleth. Labels representing the counts are added at region centroids.
}
\examples{
# Example 1: Plot and save a map grouped by ENT_BOG regions
ent_bog_regions <- data.frame(
  State = c("alabama", "alaska", "arizona"),
  ENT_BOG_Region = c("Region 4", "Region 9", "Region 9")
)
state_counts <- data.frame(
  state_code = c("alabama", "alaska", "arizona"),
  total_available = c(10, 15, 8)
)
plot_region_counts(
  state_counts = state_counts,
  region_df = ent_bog_regions,
  region_col = "ENT_BOG_Region",
  save_path = "ent_bog_region_map.png"
)

# Example 2: Plot ACOG Districts without saving
ACOG_Districts_sf <- data.frame(
  State = c("california", "nevada", "utah"),
  ACOG_District = c("District IX", "District IX", "District VIII")
)
state_counts <- data.frame(
  state_code = c("california", "nevada", "utah"),
  total_available = c(20, 12, 5)
)
plot_region_counts(
  state_counts = state_counts,
  region_df = ACOG_Districts_sf,
  region_col = "ACOG_District"
)

# Example 3: Plot custom regions and save output
custom_regions <- data.frame(
  State = c("texas", "new york", "florida"),
  Custom_Region = c("South", "Northeast", "South")
)
state_counts <- data.frame(
  state_code = c("texas", "new york", "florida"),
  total_available = c(25, 17, 13)
)
plot_region_counts(
  state_counts = state_counts,
  region_df = custom_regions,
  region_col = "Custom_Region",
  save_path = "custom_region_map.png"
)

}
