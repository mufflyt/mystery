% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/figure_create_forest_plot.R
\name{create_forest_plot}
\alias{create_forest_plot}
\title{Create a Forest Plot for Significant Predictors with Logging}
\usage{
create_forest_plot(df, target_variable, significant_vars)
}
\arguments{
\item{df}{A data frame containing the dataset.}

\item{target_variable}{A string representing the name of the target variable.}

\item{significant_vars}{A data frame containing significant predictors, their coefficients, and confidence intervals.}
}
\value{
A ggplot object representing the forest plot.
}
\description{
This function creates a forest plot for significant predictors, showing their coefficients and confidence intervals.
The function logs the process, including inputs and outputs for transparency.
}
\examples{
# Example usage:

# 1. Prepare the dataset
predictor_vars <- prepare_dataset(df, target_variable = "cleaned_does_the_physician_accept_medicaid_numeric",
                                  excluded_columns = c("does_the_physician_accept_medicaid",
                                                       "cleaned_does_the_physician_accept_medicaid"))

# 2. Fit Poisson models and extract p-values
results <- fit_poisson_models(df, target_variable = "cleaned_does_the_physician_accept_medicaid_numeric",
                              predictor_vars = predictor_vars)

# 3. Determine the direction of significant variables
significant_vars <- results \%>\%
  dplyr::filter(P_Value < 0.2)  # Apply significance filter
significant_vars_with_direction <- determine_direction(df, "cleaned_does_the_physician_accept_medicaid_numeric",
                                                       significant_vars)

# 4. Create a forest plot for significant predictors
forest_plot <- create_forest_plot(df, "cleaned_does_the_physician_accept_medicaid_numeric",
                                  significant_vars_with_direction)
print(forest_plot)
}
